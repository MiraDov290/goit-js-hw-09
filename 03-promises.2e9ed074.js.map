{"mappings":"C,A,W,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,SCGM,EAAU,SAAS,aAAA,CAAc,SAEvC,EAAQ,gBAAA,CAAiB,SAEzB,SAAsB,CAAC,EACrB,EAAE,cAAF,GAIA,IAAK,IAFD,EAAQ,OAAO,EAAQ,KAAA,CAAM,KAAjC,EAES,EAAI,EAAG,GAAK,EAAQ,MAAA,CAAO,KAAA,CAAO,GAAK,EAC9C,AAYJ,CAAA,SAAuB,CAAQ,CAAE,CAAK,EACpC,IAAM,EAAM,CAAE,SAAA,EAAU,MAAA,CAAM,EACxB,EAAgB,KAAK,MAAA,GAAW,GAEtC,OAAO,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,WAAW,WACL,EACF,EAAQ,GAER,EAAO,EAEX,EAAG,EACL,EACF,CAAA,EAzBkB,EAAG,GACd,IAAA,CAAK,SADR,CAAA,EACW,IAAA,EAAA,EAAA,QAAA,CAAU,EAAA,EAAA,KAAV,CACP,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,OAAA,CAAS,uBAAqC,MAAA,CAAf,EAAS,QAAY,MAAA,CAAN,EAAM,MAC7D,GACC,KAAA,CAAM,SADP,CAAA,EACU,IAAA,EAAA,EAAA,QAAA,CAAU,EAAA,EAAA,KAAV,CACR,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,OAAA,CAAS,sBAAoC,MAAA,CAAf,EAAS,QAAY,MAAA,CAAN,EAAM,MAC5D,GACF,GAAS,OAAO,EAAQ,IAAA,CAAK,KAA7B,CAEJ,E","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar $h6c0i = parcelRequire(\"h6c0i\");\nvar $ce04d3a99e08e73b$var$formRef = document.querySelector(\".form\");\n$ce04d3a99e08e73b$var$formRef.addEventListener(\"submit\", $ce04d3a99e08e73b$var$onSubmitForm);\nfunction $ce04d3a99e08e73b$var$onSubmitForm(e) {\n    e.preventDefault();\n    var delay = Number($ce04d3a99e08e73b$var$formRef.delay.value);\n    for(var i = 1; i <= $ce04d3a99e08e73b$var$formRef.amount.value; i += 1){\n        $ce04d3a99e08e73b$var$createPromise(i, delay).then(function(param) {\n            var position = param.position, delay = param.delay;\n            (0, $h6c0i.Notify).success(\"✅ Fulfilled promise \".concat(position, \" in \").concat(delay, \"ms\"));\n        }).catch(function(param) {\n            var position = param.position, delay = param.delay;\n            (0, $h6c0i.Notify).failure(\"❌ Rejected promise \".concat(position, \" in \").concat(delay, \"ms\"));\n        });\n        delay += Number($ce04d3a99e08e73b$var$formRef.step.value);\n    }\n}\nfunction $ce04d3a99e08e73b$var$createPromise(position, delay) {\n    var obj = {\n        position: position,\n        delay: delay\n    };\n    var shouldResolve = Math.random() > 0.3;\n    return new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            if (shouldResolve) resolve(obj);\n            else reject(obj);\n        }, delay);\n    });\n}\n\n})();\n//# sourceMappingURL=03-promises.2e9ed074.js.map\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(formRef.delay.value);\n\n  for (let i = 1; i <= formRef.amount.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(formRef.step.value);\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(obj);\n      } else {\n        reject(obj);\n      }\n    }, delay);\n  });\n}\n\n\n\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$h6c0i","$ce04d3a99e08e73b$var$formRef","document","querySelector","addEventListener","e","preventDefault","delay","Number","value","i","amount","$ce04d3a99e08e73b$var$createPromise","position","obj","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","Notify","success","concat","catch","failure","step"],"version":3,"file":"03-promises.2e9ed074.js.map"}